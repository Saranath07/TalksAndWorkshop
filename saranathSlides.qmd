---
title: "<span style='color:black;'>Intelligent</span> <span style='color:grey; font-weight:bold;'>Machines</span>?"
author: "Saranath"
format: 
    revealjs:
        chalkboard: true
        multiplex: true
        transition: slide
        background-transition: fade

---

## {auto-animate=true}

::: {style="margin-top: 300px; font-size: 2em; color : blue; "}
**Are they really Intelligent?**
:::

---

## {auto-animate=true}

::: {style="margin-top: 0px;"}
**Are they really Intelligent?**
:::

::: {.fragment fragment-index=1}
- Language
:::

::: {}
![](Language.png){.fragment fragment-index=2}
:::

---

## {auto-animate=true}

::: {style="margin-top: 0px;"}
**Are they really Intelligent?**
:::

::: {.fragment fragment-index=1}
- Vision
:::

::: {}
![](vision.webp){.fragment fragment-index=2}
:::

---

## {auto-animate=true}

::: {style="margin-top: 0px;"}
**Are they really Intelligent?**
:::

::: {.fragment fragment-index=1}
- Speech
:::

::: {}
![](speech.webp){.fragment fragment-index=2}
:::

---

## {auto-animate=true}

::: {style="margin-top: 100px;" .fragment fragment-index=1}
These are the capapabilities of **Human Beings**. 
:::

\

::: {.fragment fragment-index=2}
But still are they enough to conclude that these machines are **intelligent**?
:::


::: {style="margin-top: 200px; font-size: 2em;" .fragment fragment-index=3}
**What is Intelligence?**
:::

---

## {auto-animate=true}
::: {style="margin-top: 0px; font-size: 2em;" }
**What is Intelligence?**
:::

:::{.absolute height=400px; width=450px left=300px .fragment fragment-index=1}
![](reasoning.webp){.fragment fragment-index=1}
:::

:::{.fragment .absolute fragment-index=2  style="margin-top: 450px;"}
All these machines can talk, see and make decisions alike humans. So can we conclude them as the best and move on?
:::



# Let us understand what they do before jumping into a conclusion

---

## {auto-animate=true}
## Consider these two diagrams



:::{.absolute width=500px height=500px .fragment fragment-index=1}
![](circle.png)

<span class="absolute fragment" left=140px top=390px fragment-index=2> **Circle : $100$** </span>

:::

:::{.absolute left=500px height=500px top=60px .fragment fragment-index=3}
![](circle_1.png)

<span class="absolute fragment" left=170px top=410px fragment-index=4> **Circle : $80$** </span>

:::

:::{.absolute bottom=0px .fragment fragment-index=5}
Imagine the right image is produced by the machine when we asked it to give a circle.
How can we say the machine to correct itself?
:::




## Our Objective



:::{}
![](circle_1.png)

<span class="absolute" left=240px top=520px> **Circle : $80$** </span>

:::

:::{.fragment fragment-index=1}
We have to somehow get this circle close to the original ones.
:::

## Some Common notations

\

:::{.fragment fragment-index=1}
We call $\textbf{y}$ as the true output. In our case $100$
:::

\ 

:::{.fragment fragment-index=2}
We call $\hat{\textbf{y}}$ as the predicted output. In our case $80$
:::

\

:::{.fragment fragment-index=3}
**Revised Objective**
:::

:::{.fragment fragment-index=4 .absolute left=200px}
$\text{min} \ distance(\textbf{y}, \hat{\textbf{y}})$
:::

---
## Visualization{auto-animate=true}



:::{.fragment fragment-index=1}
Let us imagine that this is the plot of $distance(\textbf{y}, \hat{\textbf{y}})$
:::

:::{.fragment fragment-index=2}

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0" y="0" width="922" height="414" style="
        width:922px;
        height:414px;
        background: #FFF;
        fill: none;
">
        <svg xmlns="http://www.w3.org/2000/svg"/>
        
        <svg xmlns="http://www.w3.org/2000/svg" class="role-diagram-draw-area"><g class="shapes-region" style="stroke: black; fill: none;"><g class="composite-shape axis2d" style="stroke-width: 1; stroke: rgb(0, 0, 0);"><path class="real" d=" M251,326.9 L664,326.9 M292.3,51.5 L292.3,357.5"/><path d=" M657,321.9 L664,326.9 L657,331.9"/><path d=" M287.3,58.5 L292.3,51.5 L297.3,58.5"/></g><g class="arrow-line"><path class="connection real" stroke-dasharray="" d="  M371,142.5 C468,-133.5 510,583.5 593,56.5" style="stroke: rgb(0, 0, 0); stroke-width: 1; fill: none; fill-opacity: 1;"/></g><g class="composite-shape"><path class="real" d=" M86,436.5 C86,431.81 89.81,428 94.5,428 C99.19,428 103,431.81 103,436.5 C103,441.19 99.19,445 94.5,445 C89.81,445 86,441.19 86,436.5 Z" style="stroke-width: 1; stroke: rgb(0, 0, 0); fill: rgb(65, 117, 5); fill-opacity: 1;"/></g><g/></g><g/><g/><g/></svg>
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="920" height="412" style="width:920px;height:412px;font-family:LatinModern-Math, LatinModern, Asana-Math, Asana;background:#FFF;"></svg>
</svg>


:::

:::{.absolute width=100px height=100px left=400px bottom=400px .fragment fragment-index=3}
<svg height="70" width="70" xmlns="http://www.w3.org/2000/svg">
  <circle r="15" cx="50" cy="50" fill="green" />
</svg>

:::



## Visualization{auto-animate=true}


Let us imagine that this is the plot of $distance(\textbf{y}, \hat{\textbf{y}})$




<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0" y="0" width="922" height="414" style="
        width:922px;
        height:414px;
        background: #FFF;
        fill: none;
">
        <svg xmlns="http://www.w3.org/2000/svg"/>
        
        <svg xmlns="http://www.w3.org/2000/svg" class="role-diagram-draw-area"><g class="shapes-region" style="stroke: black; fill: none;"><g class="composite-shape axis2d" style="stroke-width: 1; stroke: rgb(0, 0, 0);"><path class="real" d=" M251,326.9 L664,326.9 M292.3,51.5 L292.3,357.5"/><path d=" M657,321.9 L664,326.9 L657,331.9"/><path d=" M287.3,58.5 L292.3,51.5 L297.3,58.5"/></g><g class="arrow-line"><path class="connection real" stroke-dasharray="" d="  M371,142.5 C468,-133.5 510,583.5 593,56.5" style="stroke: rgb(0, 0, 0); stroke-width: 1; fill: none; fill-opacity: 1;"/></g><g class="composite-shape"><path class="real" d=" M86,436.5 C86,431.81 89.81,428 94.5,428 C99.19,428 103,431.81 103,436.5 C103,441.19 99.19,445 94.5,445 C89.81,445 86,441.19 86,436.5 Z" style="stroke-width: 1; stroke: rgb(0, 0, 0); fill: rgb(65, 117, 5); fill-opacity: 1;"/></g><g/></g><g/><g/><g/></svg>
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="920" height="412" style="width:920px;height:412px;font-family:LatinModern-Math, LatinModern, Asana-Math, Asana;background:#FFF;"></svg>
</svg>




:::{.absolute width=100px height=100px left=480px bottom=250px}
<svg height="70" width="70" xmlns="http://www.w3.org/2000/svg">
  <circle r="15" cx="50" cy="50" fill="green" />
</svg>

:::

:::{.fragment fragment-index=1 .absolute bottom=10px}
Now what should we say the machine to make it move downwards?
:::

# Let us see how can we move them mathematically

## Magic $\to$ Math

:::{.fragment fragment-index=1}

<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0" y="0" width="922" height="414" style="
        width:922px;
        height:414px;
        background: #FFF;
        fill: none;
">
        <svg xmlns="http://www.w3.org/2000/svg"/>
        
        <svg xmlns="http://www.w3.org/2000/svg" class="role-diagram-draw-area"><g class="shapes-region" style="stroke: black; fill: none;"><g class="composite-shape axis2d" style="stroke-width: 1; stroke: rgb(0, 0, 0);"><path class="real" d=" M251,326.9 L664,326.9 M292.3,51.5 L292.3,357.5"/><path d=" M657,321.9 L664,326.9 L657,331.9"/><path d=" M287.3,58.5 L292.3,51.5 L297.3,58.5"/></g><g class="arrow-line"><path class="connection real" stroke-dasharray="" d="  M371,142.5 C468,-133.5 510,583.5 593,56.5" style="stroke: rgb(0, 0, 0); stroke-width: 1; fill: none; fill-opacity: 1;"/></g><g class="composite-shape"><path class="real" d=" M86,436.5 C86,431.81 89.81,428 94.5,428 C99.19,428 103,431.81 103,436.5 C103,441.19 99.19,445 94.5,445 C89.81,445 86,441.19 86,436.5 Z" style="stroke-width: 1; stroke: rgb(0, 0, 0); fill: rgb(65, 117, 5); fill-opacity: 1;"/></g><g/></g><g/><g/><g/></svg>
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="920" height="412" style="width:920px;height:412px;font-family:LatinModern-Math, LatinModern, Asana-Math, Asana;background:#FFF;"></svg>
</svg>


:::

:::{.absolute width=100px height=100px left=380px bottom=490px .fragment fragment-index=2}
<svg height="70" width="70" xmlns="http://www.w3.org/2000/svg">
  <circle r="15" cx="50" cy="50" fill="green" />
</svg>

:::

:::{.fragment fragment-index=3}
We are focused more in the direction. So to go downwards, <span class="fragment" fragment-index=4> we go in the direction opposite to the </span> <span class="fragment" fragment-index=5> **Slope** </span>
:::

## A small example...

<video width="800" controls autoplay loop muted>
  <source src="media/videos/prepareVideo/1080p60/GradientDescent.mp4" type="video/mp4">
  Your browser does not support the video tag.
</video>


## {auto-animate="true"}

::: {style="margin-top: 300px; font-size: 2em; color : black; "}
**So this is what happens behind the screens..**
:::



## {auto-animate="true"}

::: {style="margin-top: 0px;"}
**So this is what happens behind the screens..**
::: 
